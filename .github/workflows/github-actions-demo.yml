name: GitHub Actions Demo
on:
  pull_request:
    types: [opened, synchronize]
jobs:
  fetchLanguages:
    name: Fetch Languages in Repo
    runs-on: ubuntu-latest
    outputs:
      go: ${{ steps.get-present-languages.outputs.GO }}
      java: ${{ steps.get-present-languages.outputs.JAVA }}
      javascript-typescript: ${{ steps.get-present-languages.outputs.JAVASCRIPT_TYPESCRIPT }}
      python: ${{ steps.get-present-languages.outputs.PYTHON }}
    steps:
      - name: Print present languages
        id: print-present-languages
        run: |
          echo "$(curl -s ${{ github.event.repository.languages_url }})" | jq -r 'keys[]'
          echo "LANGUAGES=$(curl -s ${{ github.event.repository.languages_url }} | jq -r 'keys[]')" >> $GITHUB_ENV
          echo "Python = ${{ contains(env.LANGUAGES, 'Python') }}"
      - name: Get Present Languages
        id: get-present-languages
        run: |
          languages=$(curl -s ${{ github.event.repository.languages_url }})
          echo "$languages" | jq -r 'keys[]' |
          while IFS= read -r language; do
            case "$language" in
            Go)
              echo "GO=1" >> $GITHUB_OUTPUT
              ;;
            Java)
              echo "JAVA=1" >> $GITHUB_OUTPUT
              ;;
            JavaScript | TypeScript)
              echo "JAVASCRIPT_TYPESCRIPT=1" >> $GITHUB_OUTPUT
              ;;
            Python)
              echo "PYTHON=1" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "Language not yet supported: ${language}"
              ;;
            esac
          done
#      - name: Parse Python
#        uses: 'https://us-docker.pkg.dev/plumbr/sourcefield-public/sourcefield-lsif-typescript:421ea40'
#        if: env.PYTHON == '1'
#      - name: Parse Go
#        uses: 'https://us-docker.pkg.dev/plumbr/sourcefield-public/sourcefield-lsif-go:57d9af0'
#        if: env.GO == '1'
#  parseGo:
#    name: Parse Go Map
#    runs-on: <<<<PUT IN DOCKER IMAGE HERRE>>>>
#    needs: [fetchLanguages]
#    if: needs.fetchLanguages.outputs.go == '1'
#    steps:
#      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}
#  parseJava:
#    name: Parse Java Map
#    runs-on: <<<<PUT IN DOCKER IMAGE HERRE>>>>
#    needs: [fetchLanguages]
#    if: needs.fetchLanguages.outputs.java == '1'
#    steps:
#      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}
#  parseJavascriptTypeScript:
#    name: Parse Javascript/TypeScript Map
#    runs-on: <<<<PUT IN DOCKER IMAGE HERRE>>>>
#    needs: [fetchLanguages]
#    if: needs.fetchLanguages.outputs.javascript-typescript == '1'
#    steps:
#      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}
  parsePython:
    name: Parse Python Map
    runs-on: 'us-docker.pkg.dev/plumbr/sourcefield-public/lsif-python-pyright:e854776'
    needs: [fetchLanguages]
    if: needs.fetchLanguages.outputs.python == '1'
    steps:
      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}

  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - name: Hello world from Docker
        uses: ./ # Uses an action in the root directory
        id: hello
        with:
          who-to-greet: 'awesome'
      - uses: rmacklin/fetch-through-merge-base@v0
        with:
          base_ref: main
          head_ref: ${{ github.sha }}
      # now we've fetched commits through the merge-base of the source branch
      # and target branch of the pull request, so we can do things like:
      - run: echo "MERGE_BASE=$(git merge-base main ${{ github.sha }})" >> $GITHUB_ENV
      - run: echo "merge base = ${{ env.MERGE_BASE }}"
      - run: echo "HEAD = ${{ github.event.pull_request.head.sha }}"
      - run: git log --oneline main..
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
#      - run: echo "LANGUAGES=$(curl -s ${{ github.event.repository.languages_url }})" >> $GITHUB_ENV
#      - run: echo "Languages = ${{ env.LANGUAGES }}"
      - name: Find changed files
        run: |
          echo 'LS_DIFF<<EOF' >> $GITHUB_ENV
          git diff --name-only main...${{ github.sha }} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Update or create PR comment
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            Changed files:
            ```
            ${{ env.LS_DIFF }}
            ```
            Commit: ${{ github.sha }}
            <details><summary>Event payload</summary>
            
            ```json
            ${{ toJson(github.event) }}
            ```
            
            ```
            ${{ env.EVENT_CONTENTS }}
            ```
            </details>
          comment_includes: 'Changed files:'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
